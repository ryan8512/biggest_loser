AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Parameters:
  Stage:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
    Description: Deployment stage (dev or prod)

Conditions:
  IsDev: !Equals [!Ref Stage, 'dev']
  IsProd: !Equals [!Ref Stage, 'prod']

Globals:
  Api:
    Cors:
      AllowMethods: "'GET,POST,OPTIONS'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
      AllowOrigin: "'*'"
  Function:
    Environment:
      Variables:
        STAGE: !Ref Stage

Resources:
  # S3 Bucket for Steps Photos
  StepsPhotoBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !If 
        - IsDev
        - !Sub biggestloser8152-steps-dev
        - biggestloser8152-steps
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ['*']
            AllowedMethods: [GET, PUT, POST]
            AllowedOrigins: ['*']
            MaxAge: 3000

  ApiHandler:
    Type: AWS::Serverless::Function
    Properties:
      Handler: back_end/index_aws.handler
      Runtime: nodejs22.x
      Timeout: 60
      MemorySize: 128
      Policies:
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
        - DynamoDBCrudPolicy:
            TableName: !If 
              - IsDev
              - !Ref WeightsDev
              - !Ref Weights
      Events:
        CheckUsername:
          Type: Api
          Properties:
            Path: /check-username
            Method: post
        CheckWeight:
          Type: Api
          Properties:
            Path: /check-weight
            Method: post
        GetWeeklyLeaderboard: 
          Type: Api
          Properties:
            Path: /get-weekly-leaderboard
            Method: get
        GetOverallLeaderboard:
          Type: Api
          Properties:
            Path: /get-overall-leaderboard
            Method: get
        GetUserStat:
          Type: Api
          Properties:
            Path: /get-user-stat
            Method: get
        CheckIndexForm:
          Type: Api
          Properties:
            Path: /check-index-form
            Method: post

  StepsApiHandler:
    Type: AWS::Serverless::Function
    Properties:
      Handler: back_end/index_aws_steps.handler
      Runtime: nodejs22.x
      Timeout: 60
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !If 
              - IsDev
              - !Ref StepsDev
              - !Ref Steps
        - S3CrudPolicy:
            BucketName: !Ref StepsPhotoBucket
      Events:
        LoginSteps:
          Type: Api
          Properties:
            Path: /login_steps
            Method: post
        SubmitSteps:
          Type: Api
          Properties:
            Path: /submit_steps
            Method: post
        SubmitPhotoProof:
          Type: Api
          Properties:
            Path: /submit_photo_proof
            Method: post
        GetOverallStepsLeaderboard:
          Type: Api
          Properties:
            Path: /overall_steps_leaderboard
            Method: get
        GetWeeklyStepsLeaderboard:
          Type: Api
          Properties:
            Path: /weekly_steps_leaderboard
            Method: get
        GetUserStepsStats:
          Type: Api
          Properties:
            Path: /user_steps_stats/{username}
            Method: get

  # Production DynamoDB Tables (existing)
  Weights:
    Type: AWS::DynamoDB::Table
    Condition: IsProd
    Properties:
      TableName: Weights
      AttributeDefinitions:
        - AttributeName: username
          AttributeType: S
        - AttributeName: date
          AttributeType: S
      KeySchema:
        - AttributeName: username
          KeyType: HASH
        - AttributeName: date
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

  Steps:
    Type: AWS::DynamoDB::Table
    Condition: IsProd
    Properties:
      TableName: Steps
      AttributeDefinitions:
        - AttributeName: username
          AttributeType: S
        - AttributeName: date
          AttributeType: S
      KeySchema:
        - AttributeName: username
          KeyType: HASH
        - AttributeName: date
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

  # Development DynamoDB Tables (new)
  WeightsDev:
    Type: AWS::DynamoDB::Table
    Condition: IsDev
    Properties:
      TableName: Weights-dev
      AttributeDefinitions:
        - AttributeName: username
          AttributeType: S
        - AttributeName: date
          AttributeType: S
      KeySchema:
        - AttributeName: username
          KeyType: HASH
        - AttributeName: date
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

  StepsDev:
    Type: AWS::DynamoDB::Table
    Condition: IsDev
    Properties:
      TableName: Steps-dev
      AttributeDefinitions:
        - AttributeName: username
          AttributeType: S
        - AttributeName: date
          AttributeType: S
      KeySchema:
        - AttributeName: username
          KeyType: HASH
        - AttributeName: date
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint"
    Value: !If 
      - IsDev
      - !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/dev/"
      - !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  WeightsTableName:
    Description: "Weights DynamoDB Table Name"
    Value: !If 
      - IsDev
      - !Ref WeightsDev
      - !Ref Weights
  StepsTableName:
    Description: "Steps DynamoDB Table Name"
    Value: !If 
      - IsDev
      - !Ref StepsDev
      - !Ref Steps
  StepsPhotoBucketName:
    Description: "S3 Bucket for Steps Photos"
    Value: !Ref StepsPhotoBucket
  Stage:
    Description: "Current deployment stage"
    Value: !Ref Stage
