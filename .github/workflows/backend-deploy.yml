name: Deploy Backend

on:
  push:
    paths:
      - "back_end/**"
      - ".github/workflows/backend-deploy.yml"
      - "aws-cdk.py"
      - "requirements.txt"
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install CDK
        run: npm install -g aws-cdk

      - name: Install backend dependencies
        working-directory: back_end
        run: npm install

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install Python dependencies for CDK
        run: pip install -r requirements.txt

      - name: Deploy CDK stack
        run: cdk deploy --app "python aws-cdk.py" --require-approval never

      - name: Read deploy-config.json
        id: read-config
        run: |
          STACK_NAME=$(jq -r '.stackName' deploy-config.json)
          echo "STACK_NAME=$STACK_NAME" >> $GITHUB_ENV

      - name: Extract CDK outputs and store in SSM
        run: |
          BUCKET_NAME=$(aws cloudformation describe-stacks \
            --stack-name "$STACK_NAME" \
            --query "Stacks[0].Outputs[?OutputKey=='BucketName'].OutputValue" \
            --output text)

          API_ENDPOINT=$(aws cloudformation describe-stacks \
            --stack-name "$STACK_NAME" \
            --query "Stacks[0].Outputs[?OutputKey=='ApiEndpoint'].OutputValue" \
            --output text)

          echo "BucketName: $BUCKET_NAME"
          echo "ApiEndpoint: $API_ENDPOINT"

          aws ssm put-parameter \
            --name "/$STACK_NAME/s3-bucket" \
            --value "$BUCKET_NAME" \
            --type "String" \
            --overwrite

          aws ssm put-parameter \
            --name "/$STACK_NAME/api-url" \
            --value "$API_ENDPOINT" \
            --type "String" \
            --overwrite
